#!/bin/bash

function run() {
  g++ -std=c++17 "$@" && ./a.out;
}

function py() {
  python3 "$@";
}

function rs() {
  cargo run "$@";
}

function hs() { 
 ghc "$@".hs && ./"$@";
}

# Startup redis
function redis() {
 redis-server /usr/local/etc/redis.conf
}

# Open file in chrome
function oc() {
  open -a "Google Chrome" "$@"
}

# Create and CD into directory
function mkcd() {
  mkdir -p "$@" && cd "$@" || exit
}

# See total lines of code in a git repo
function loc() {
  git ls-files | xargs wc -l
}

# See total number of commits
function noc() {
  git rev-list --count HEAD
}

# Generate a SHA-256 hash
function sha() {
  echo -n "$@" | shasum -a 256
}

# Misc
function sol() {
  touch solution."$@" && vi solution."$@"
}

function note() {
  local notes_dir="$HOME/Dropbox/Notes"
  case "$1" in
    c)
      cd "$notes_dir" || exit
      ;;
    l)
      ls "$notes_dir"
      ;;
    p)
      pushd "$notes_dir" || exit
      msg="Regenerated at $(date -u '+%Y-%m-%d %H:%M:%S') UTC"
      git add .
      git commit -m "$msg"
      git push origin master
      popd || exit
      ;;
    *)
      vim "$notes_dir/$1"
  esac
}

function journal() {
  local journal_dir="$HOME/Dropbox/Notes/daily/journals"
  case "$1" in
    new)
      cd "$journal_dir" || exit
      vi "$(date -u '+%Y-%m-%d')".md
      ;;
  esac
}
# Misc/end

# Determine size of a file or total size of a directory
# from https://github.com/mathiasbynens/dotfiles/blob/main/.functions
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

# See absolute path
function realpath() {
    [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

# LS through bat 
function bls() {
  ls . | bat
}

# Fetch bitcoin price information 
function btc() {    
  curl rate.sx/btc
}
